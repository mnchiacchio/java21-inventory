package com.example.inventory;

import com.example.inventory.service.InventoryService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;
import org.springframework.lang.NonNull;
import org.springframework.web.servlet.config.annotation.CorsRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;

import jakarta.annotation.PreDestroy;

/**
 * Clase principal de la aplicaciÃ³n Spring Boot.
 * 
 * Esta clase inicia la aplicaciÃ³n y configura los beans necesarios.
 * Implementa el patrÃ³n de configuraciÃ³n centralizada de Spring Boot.
 */
@SpringBootApplication
public class InventoryApplication {

    @Autowired
    private InventoryService inventoryService;

    public static void main(String[] args) {
        // Inicia la aplicaciÃ³n Spring Boot
        SpringApplication.run(InventoryApplication.class, args);
        
        // Mensaje de bienvenida
        System.out.println("ðŸš€ Inventory API iniciada correctamente!");
        System.out.println("ðŸ“‹ Endpoints disponibles en: http://localhost:8080/api/items");
        System.out.println("âš¡ EjecutÃ¡ndose con Virtual Threads de Java 21");
    }

    /**
     * ConfiguraciÃ³n CORS para permitir peticiones desde el frontend.
     * 
     * @return Configurador CORS
     */
    @Bean
    public WebMvcConfigurer corsConfigurer() {
        return new WebMvcConfigurer() {
            @Override
            public void addCorsMappings(@NonNull CorsRegistry registry) {
                registry.addMapping("/api/**")
                        .allowedOrigins("*")
                        .allowedMethods("GET", "POST", "PUT", "DELETE", "OPTIONS")
                        .allowedHeaders("*");
            }
        };
    }

    /**
     * MÃ©todo que se ejecuta antes de cerrar la aplicaciÃ³n.
     * Cierra correctamente el ExecutorService de Virtual Threads.
     */
    @PreDestroy
    public void onShutdown() {
        System.out.println("ðŸ›‘ Cerrando Inventory API...");
        inventoryService.shutdown();
        System.out.println("âœ… AplicaciÃ³n cerrada correctamente");
    }
}
